// Code generated by go-enum, DO NOT EDIT.
package singlefile

import (
	"github.com/globalsign/mgo/bson"

	mongo "go.mongodb.org/mongo-driver/bson"
	"go.mongodb.org/mongo-driver/bson/bsontype"
)

func (biscuit_enum Biscuit) GetBSON() (interface{}, error) {
	err := biscuit_enum.Validate() 
	if err != nil {
		return nil, err
	}

	return biscuit_enum.String(), nil
}

func (biscuit_enum *Biscuit) SetBSON(raw bson.Raw) error {
	var str string

	if len(raw.Data) == 0 {
		return bson.ErrSetZero
	}
	
	err := raw.Unmarshal(&str)
	if err != nil {
		return err
	}

	enum, err := BiscuitFromString(str)
	if err != nil {
		return err
	}

	*biscuit_enum = *enum
	return nil
}

func (biscuit_enum *Biscuit) UnmarshalBSON(data []byte) error {
	return biscuit_enum.SetBSON(bson.Raw{
		Kind: bson.ElementString,
		Data: data,
	})
}

func (biscuit_enum Biscuit) MarshalBSONValue() (bsontype.Type, []byte, error) {
	err := biscuit_enum.Validate()
	if err != nil {
		return bsontype.Undefined,nil, err
	}

	return mongo.MarshalValue(biscuit_enum.String())
}
