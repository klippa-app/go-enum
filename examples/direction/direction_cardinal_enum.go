// Code generated by go-enum, DO NOT EDIT.
package directions

import (
	"fmt"
)

func AllCardinals() []Cardinal {
	return []Cardinal{
		CardNorth,
		CardSouth,
		CardWest,
		CardEast,
	}
}

func validCardinals() []Cardinal {
	return []Cardinal{
		CardNorth,
		CardSouth,
		CardWest,
		CardEast,
	}
}

func ToCardinal(value string) Cardinal {
	cardinal_enum := Cardinal(value)
	switch cardinal_enum {
	case CardNorth, CardSouth, CardWest, CardEast:
		return cardinal_enum
	default:
		panic(fmt.Sprintf("no default for enum %v", cardinal_enum))
	}
}

func (cardinal_enum Cardinal) String() string {
	switch cardinal_enum {
	case CardNorth:
		return "card_north"
	case CardSouth:
		return "card_south"
	case CardWest:
		return "card_west"
	case CardEast:
		return "card_east"
	default:
		panic(fmt.Sprintf("no default for enum %T, invalid value: '%#v'", cardinal_enum, cardinal_enum))
	}
}

func CardinalFromString(val string) (*Cardinal, error) {
	valid := validCardinals()
	for i := range valid {
		if valid[i].String() == val {
			return &valid[i], nil
		}
	}

	return nil, fmt.Errorf("%s is not a valid Cardinal", val)
}

func (cardinal_enum Cardinal) Validate() error {
	_, err := CardinalFromString(cardinal_enum.String())
	return err
}
