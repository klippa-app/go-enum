// Code generated by go-enum, DO NOT EDIT.
package directions

import (
	"fmt"
)

func AllDirections() []Direction {
	return []Direction{
		North,
		South,
		West,
		East,
	}
}

func validDirections() []Direction {
	return []Direction{
		North,
		South,
		West,
		East,
	}
}

func ToDirection(value int) Direction {
	direction_enum := Direction(value)
	switch direction_enum {
	case North, South, West, East:
		return direction_enum
	default:
		panic(fmt.Sprintf("no default for enum %v", direction_enum))
	}
}

func (direction_enum Direction) String() string {
	switch direction_enum {
	case North:
		return "north"
	case South:
		return "south"
	case West:
		return "west"
	case East:
		return "east"
	default:
		panic(fmt.Sprintf("no default for enum %T, invalid value: '%#v'", direction_enum, direction_enum))
	}
}

func DirectionFromString(val string) (*Direction, error) {
	valid := validDirections()
	for i := range valid {
		if valid[i].String() == val {
			return &valid[i], nil
		}
	}

	return nil, fmt.Errorf("%s is not a valid Direction", val)
}

func (direction_enum Direction) Validate() error {
	_, err := DirectionFromString(direction_enum.String())
	return err
}
