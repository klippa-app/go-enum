// Code generated by go-enum, DO NOT EDIT.
package {{ $.Pkg }}

{{- $t := $.EnumName }}
{{- $lt := receiver $t }}
{{- $validFn := print "valid" (pascal ( plural $t )) "()"}}
{{- $FromString := print (pascal ( $t )) "FromString"}}

import (
	"database/sql/driver"
	"fmt"
)

func ({{ $lt }} {{ $t }}) Value() (driver.Value, error) {
	return {{ $lt }}.String(), {{ $lt }}.Validate()
}

func ({{ $lt }} *{{ $t }}) Scan(val any) error {
	var str string

	switch v := val.(type) {
	case string:
		str = v
	case []byte:
		str = string(v)
	default:
		return fmt.Errorf("unsupported type %T", v)
	}

	enum, err := {{ $FromString }}(str)
	if err != nil {
		return err
	}

	*{{ $lt }} = *enum
	return nil
}
